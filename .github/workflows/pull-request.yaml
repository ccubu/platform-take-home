name: pull-request
on:
  pull_request:
    branches:
      - main
jobs:
  pr-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
        name: checkout
        with:
          persist-credentials: false

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/rest-api:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_REGISTRY }}/rest-api:${{ github.sha }}

      - name: Check DRY_RUN Flag
        id: check-dry-run
        run: |
          if [ "${{ vars.DRY_RUN }}" = "true" ]; then
            echo "DRY_RUN is enabled. Skipping GKE configuration and deployment steps."
            echo "dry_run=true" >> $GITHUB_ENV
          else
            echo "DRY_RUN is disabled. Proceeding with GKE configuration and deployment."
            echo "dry_run=false" >> $GITHUB_ENV
          fi

      - name: Authenticate with GCP
        if: env.dry_run == 'false'
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: Configure GKE Credentials
        if: env.dry_run == 'false'
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: europe-west1

      - name: Install Helm, Helm Diff Plugin, Helmfile and Vcluster
        if: env.dry_run == 'false'
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh && ./get_helm.sh && rm -f get_helm.sh

          helm plugin install https://github.com/databus23/helm-diff --version v3.8.1

          URL=https://github.com/helmfile/helmfile/releases/download/v0.169.2/helmfile_0.169.2_linux_amd64.tar.gz
          mkdir helmfile && wget -q $URL -O - | tar -xz -C helmfile
          if [ -w /usr/local/bin ]; then SUDO=""; else SUDO="sudo"; fi
          $SUDO chmod +x ./helmfile/helmfile && $SUDO mv ./helmfile/helmfile /usr/local/bin && rm -rf ./helmfile

          curl -L -o vcluster "https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-linux-amd64" && sudo install -c -m 0755 vcluster /usr/local/bin && sudo rm -f vcluster

          helm version
          helm plugin list
          helmfile --version
          vcluster version

      - name: Create vcluster for PR env
        if: env.dry_run == 'false'
        run: |
          vcluster create pr-${{ github.event.pull_request.number }} --namespace pr-${{ github.event.pull_request.number }} --expose
          vcluster connect pr-${{ github.event.pull_request.number }} --namespace pr-${{ github.event.pull_request.number }} --print

      - name: Deploy
        if: env.dry_run == 'false'
        run: |
          cd deployment
          IMAGE_TAG=${{ github.sha }} helmfile --environment development diff
          IMAGE_TAG=${{ github.sha }} helmfile --environment development apply

      - name: Generate Kubeconfig
        if: env.dry_run == 'false'
        run: |
          vcluster connect pr-${{ github.event.pull_request.number }} --namespace pr-${{ github.event.pull_request.number }} --print > vcluster-kubeconfig.yaml

      - name: Upload Kubeconfig as Artifact
        if: env.dry_run == 'false'
        uses: actions/upload-artifact@v3
        with:
          name: 'vcluster-kubeconfig'
          path: vcluster-kubeconfig.yaml